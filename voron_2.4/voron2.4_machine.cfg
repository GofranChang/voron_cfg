## Voron Design VORON2 250/300/350mm Spider TMC2209 UART config


## *** THINGS TO CHANGE/CHECK: ***
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Main board and tool head config
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1E0028001951303439363932-if00
# serial: /dev/ttyAMA0
# TODO: Check this
# restart_method: command

[include sample-bigtreetech-ebb-sb-canbus-v1.0.cfg]
# [include stealthburner_leds.cfg]
# [include stealthburner_led_effects_3_leds.cfg]

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Printer info Settings
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[printer]
kinematics: corexy
max_velocity: 300
max_accel: 5400              #Max 4000
# TODO: Check this
# max_accel: 7000
# max_accel_to_decel: 7000 # 3000
max_z_velocity: 15      #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  X/Y Stepper Settings
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[stepper_y]
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200
position_min: 0
position_max: 300
position_endstop: 300
homing_speed: 80  #Max 100
homing_positive_dir: true
homing_retract_dist: 5
endstop_pin: ^PA3
# endstop_pin: ^PB13

[tmc2240 stepper_y]
cs_pin: PE15
# spi_bus: spi4
spi_software_sclk_pin: PE12
spi_software_mosi_pin: PE14
spi_software_miso_pin: PE13
run_current: 1.2
# rref: 12300
driver_TPFD: 0
stealthchop_threshold: 0

[stepper_x]
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
position_min: 0
position_max: 300
position_endstop: 300
homing_speed: 50
homing_positive_dir: true
homing_retract_dist: 5
endstop_pin: !EBBCan: PB6

[tmc2240 stepper_x]
cs_pin: PE7
# spi_bus: spi4
spi_software_sclk_pin: PE12
spi_software_mosi_pin: PE14
spi_software_miso_pin: PE13
run_current: 1.2
# rref: 12300
driver_TPFD: 0
stealthchop_threshold: 0

# [stepper_x]
# ## Connected to X-MOT (B Motor)
# step_pin: PE11
# dir_pin: !PE10
# enable_pin: !PE9
# rotation_distance: 40
# microsteps: 16
# full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
# endstop_pin: !EBBCan: PB6
# position_min: 0
# position_endstop: 300
# position_max: 300
# homing_speed: 25   #Max 100
# homing_retract_dist: 5
# homing_positive_dir: true

# [tmc2209 stepper_x]
# uart_pin: PE7
# interpolate: True
# run_current: 0.7
# hold_current: 0.4
# sense_resistor: 0.110
# stealthchop_threshold: 0

# [stepper_y]
# ## Connected to Y-MOT (A Motor)
# step_pin: PD8
# dir_pin: !PB12
# enable_pin: !PD9
# rotation_distance: 40
# microsteps: 16
# # full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
# endstop_pin: ^PA3
# position_min: 0
# position_endstop: 300
# position_max: 300
# homing_speed: 25  #Max 100
# homing_retract_dist: 5
# homing_positive_dir: true

# [tmc2209 stepper_y]
# uart_pin: PE15
# interpolate: True
# run_current: 0.7
# hold_current: 0.4
# sense_resistor: 0.110
# stealthchop_threshold: 0

#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Z Stepper Settings
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: probe:z_virtual_endstop
position_max: 290
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PD10
# TODO:
interpolate: true
#driver_TBL: 1  #2
#driver_TOFF: 3  #3
#driver_HSTRT: 1  #0
#driver_HEND: 3  #5
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z1]
step_pin: PE6
dir_pin: !PC13
enable_pin: !PE5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z2]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC15
interpolate: true
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z3]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PA15
interpolate: true
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0

[controller_fan my_controller_fan]
pin: PB2
max_power: 1
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
stepper: stepper_x, stepper_y
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.


# [temperature_fan driver_cool_fan]
# pin: PB12
# max_power: 0.8
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
#sensor_type:
#sensor_pin:
#control:
#max_delta:
# min_temp: 0
# max_temp: 80
#   See the "extruder" section for a description of the above parameters.
#pid_Kp:
#pid_Ki:
#pid_Kd:
#   The proportional (pid_Kp), integral (pid_Ki), and derivative
#   (pid_Kd) settings for the PID feedback control system. Klipper
#   evaluates the PID settings with the following general formula:
#     fan_pwm = max_power - (Kp*e + Ki*integral(e) - Kd*derivative(e)) / 255
#   Where "e" is "target_temperature - measured_temperature" and
#   "fan_pwm" is the requested fan rate with 0.0 being full off and
#   1.0 being full on. The pid_Kp, pid_Ki, and pid_Kd parameters must
#   be provided when the PID control algorithm is enabled.
#pid_deriv_time: 2.0
#   A time value (in seconds) over which temperature measurements will
#   be smoothed when using the PID control algorithm. This may reduce
#   the impact of measurement noise. The default is 2 seconds.
#target_temp: 40.0
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.
#max_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when the sensor temperature exceeds the set value.
#   The default is 1.0.
#min_speed: 0.3
#   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
#   the fan will be set to for PID temperature fans.
#   The default is 0.3.
#gcode_id:
#   If set, the temperature will be reported in M105 queries using the
#   given id. The default is to not report the temperature via M105.




#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Extruder
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#   Bed Heater
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[heater_bed]
##  SSR Pin - Z board, Fan Pin
heater_pin: PB4
sensor_type: Generic 3950
sensor_pin: PB0
##  Adjust Max Power so your heater doesn't warp your bed
# TODO:
#pwm_cycle_time: 0.017
max_power: 0.7
min_temp: 0
max_temp: 115
control: pid
#pid_Kp: 42.066
#pid_Ki: 1.659
#pid_Kd: 266.595



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Mesh Bed Leveling
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0
# fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
zero_reference_position: 150,150
# algorithm: bicubic



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#   Homing and Gantry Adjustment Routines
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
[idle_timeout]
timeout: 3600   # after 1 hour, shut off heaters and de-energize the motors

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position: 150,150
speed:100
z_hop:10

[quad_gantry_level]
# rename_existing: _QUAD_GANTRY_LEVEL
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
#--------------------------------------------------------------------
##  Gantry Corners for 300mm Build
##  Uncomment for 300mm build
gantry_corners:
   -60,-10
   360,370
##  Probe points
points:
   50,25
   50,225
   250,225
   250,25
# coarse_probe: True
# coarse_probe_points:
#     50,175
#     50,225
#     250,225
#     250,175
speed: 300
horizontal_move_z: 25
retries: 10
retry_tolerance: 0.020
max_adjust: 25

[neopixel light]
pin: PD3
chain_count: 36



#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#   IDM Scanner
# #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# [idm]
# # serial:
# canbus_uuid: eaedc13ab993
# #   Path to the serial port for the idm device. Typically has the form
# #   /dev/serial/by-id/usb-idm_idm_...
# speed: 40.
# #   Z probing dive speed.
# lift_speed: 5.
# #   Z probing lift speed.
# backlash_comp: 0.5
# #   Backlash compensation distance for removing Z backlash before measuring
# #   the sensor response.
# x_offset: 0.
# #   X offset of idm from the nozzle.
# y_offset: 21.1
# #   Y offset of idm from the nozzle.
# trigger_distance: 2.
# #   idm trigger distance for homing.
# trigger_dive_threshold: 3.5
# #   Threshold for range vs dive mode probing. Beyond `trigger_distance +
# #   trigger_dive_threshold` a dive will be used.
# trigger_hysteresis: 0.006
# #   Hysteresis on trigger threshold for untriggering, as a percentage of the
# #   trigger threshold.
# cal_nozzle_z: 0.1
# #   Expected nozzle offset after completing manual Z offset calibration.
# cal_floor: 0.1
# #   Minimum z bound on sensor response measurement.
# cal_ceil:5.
# #   Maximum z bound on sensor response measurement.
# cal_speed: 1.0
# #   Speed while measuring response curve.
# cal_move_speed: 10.
# #   Speed while moving to position for response curve measurement.
# default_model_name: default
# #   Name of default idm model to load.
# mesh_main_direction: x
# #   Primary travel direction during mesh measurement.
# #mesh_overscan: -1
# #   Distance to use for direction changes at mesh line ends. Omit this setting
# #   and a default will be calculated from line spacing and available travel.
# mesh_cluster_size: 1
# #   Radius of mesh grid point clusters.
# mesh_runs: 2
# #   Number of passes to make during mesh scan.

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: _BED_MESH_CALIBRATE
gcode:
   {% set TARGET_TEMP = printer.heater_bed.target %}
   M140 S0
   _BED_MESH_CALIBRATE {rawparams}
   M140 S{TARGET_TEMP}

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
   SAVE_GCODE_STATE NAME=STATE_QGL
   BED_MESH_CLEAR
   {% if not printer.quad_gantry_level.applied %}
      _QUAD_GANTRY_LEVEL horizontal_move_z=10 retry_tolerance=1
   {% endif %}
   _QUAD_GANTRY_LEVEL horizontal_move_z=2
   G28 Z
   RESTORE_GCODE_STATE NAME=STATE_QGL

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20  # an example

